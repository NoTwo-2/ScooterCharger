DROP TABLE IF EXISTS APPUSER; 
DROP TABLE IF EXISTS LOCKER;
DROP TABLE IF EXISTS LOCKER_STATUS_LOG;
DROP TABLE IF EXISTS ISSUE_REPORT_LOG;
DROP TABLE IF EXISTS PAST_USERS_LOG;

CREATE TABLE APPUSER (
	ID INT PRIMARY KEY,
	ACCESS_TYPE TEXT CHECK (ACCESS_TYPE IN('STUDENT', 'ADMIN')) DEFAULT 'STUDENT',
	EMAIL VARCHAR(75) NOT NULL UNIQUE,
	PASSKEY VARCHAR(150) NOT NULL,
	RESERVED_L_ID INT,
	RESERVED_L_SPACE_I INT,

	FOREIGN KEY (RESERVED_L_ID) REFERENCES LOCKER(ID));

CREATE TABLE LOCKER (
	ID INT PRIMARY KEY,
	L_NAME VARCHAR(50),
	L_GMAPS_LINK VARCHAR(150),
	L_ADDRESS VARCHAR(150));
		
CREATE INDEX USER_INDEX ON APPUSER(ID);

CREATE TABLE LOCKER_STATUS_LOG (
	LOCKER_ID INT NOT NULL REFERENCES LOCKER,
	LOG_TIME DATETIME DEFAULT CURRENT_TIMESTAMP,
	IS_LOCKED BOOLEAN NOT NULL,
	TEMPERATURE FLOAT,
	CHARGING BOOLEAN,
	E_CURRENT FLOAT,
	CHECKED_OUT BOOLEAN NOT NULL,

	PRIMARY KEY (LOCKER_ID, LOG_TIME),

	FOREIGN KEY (LOCKER_ID) REFERENCES LOCKER(ID)
		ON DELETE CASCADE ON UPDATE CASCADE );
		
CREATE INDEX LOCKER_INDEX ON LOCKER(ID);

CREATE TABLE ISSUE_REPORT_LOG (
	LOCKER_ID INT NOT NULL,
	TIME_OF_ISSUE DATETIME NOT NULL,
	ISSUE TEXT CHECK(ISSUE IN ('High Temp', 'High Current', 'No Response')),

	PRIMARY KEY(LOCKER_ID, TIME_OF_ISSUE, ISSUE),

	FOREIGN KEY (LOCKER_ID) REFERENCES LOCKER(ID)
		ON DELETE CASCADE ON UPDATE CASCADE );

CREATE TABLE PAST_USERS_LOG (
	USER_ID INT NOT NULL,
	LOCKER_ID INT NOT NULL,
	CHECK_OUT DATETIME NOT NULL,
	CHECK_IN DATETIME,

	PRIMARY KEY (USER_ID, LOCKER_ID, CHECK_OUT),

	FOREIGN KEY (USER_ID) REFERENCES APPUSER(ID)
		ON DELETE CASCADE ON UPDATE CASCADE,

	FOREIGN KEY (LOCKER_ID) REFERENCES LOCKER(ID)
		ON DELETE CASCADE ON UPDATE CASCADE );
